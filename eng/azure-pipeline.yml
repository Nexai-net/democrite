# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger: none

pr:
  autoCancel: true
  branches:
    include:
      - main
      - dev

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Democrite.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  SolutionFolder: "./"
  
steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: 8.x
    includePreviewVersions: true # Required for preview versions
  
- task: NuGetAuthenticate@1

- script: dotnet restore
  displayName: Restore dependencies
  workingDirectory: $(SolutionFolder)

- script: dotnet build -c $(buildConfiguration)
  displayName: Build
  workingDirectory: $(SolutionFolder)

# - script: dotnet test -c $(buildConfiguration) --no-build -v=normal /p:CollectCoverage=true --collect:"XPlat Code Coverage" --blame-hang-timeout 240s -- xunit.ParallelizeAssembly=true xunit.MaxParallelThreads=4
#   displayName: Test with Code Coverage recolt
#   workingDirectory: $(SolutionFolder)

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'    
    arguments: '--settings .runsettings -c $(buildConfiguration) --no-build -v=normal /p:CollectCoverage=true --collect:"XPlat Code Coverage" --blame-hang-timeout 240s -- xunit.ParallelizeAssembly=true xunit.MaxParallelThreads=4 DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.CodeCoverage.ModulePaths.Exclude.ModulePath="(((Orleans.)|(h.)|(coverlet.))[a-zA-Z.]+.dll)|(Democrite.[a-zA-Z.]+.unittests.dll)"' 
    publishTestResults: true

  # Publish Cobertura or JaCoCo code coverage results from a build.
- task: PublishCodeCoverageResults@2
  displayName: Publish code coverage
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: $(System.DefaultWorkingDirectory)/src/Tests/Democrite.*/**/*coverage.xml
